---
# Pre-installation System Checks
- name: "Pre-flight checks"
  block:
    - name: "Check available disk space in GB"
      # Ensures sufficient disk space before installation
      shell: "df -h / | awk 'NR==2 {print $4}' | sed 's/G//'"
      register: available_space
      failed_when: (available_space.stdout|float) < 2

# User and Group Setup
- name: "Create tomcat group"
  group:
    name: "{{ machine_user }}"

- name: "Create tomcat user"
  user:
    name: "{{ machine_user }}"
    group: "{{ machine_user }}"

# Directory Setup and Permissions
- name: "Create app_home"
  file:
    path: "{{ app_home }}"
    owner: "{{ machine_user }}"
    group: "{{ machine_user }}"
    state: directory

# Java Installation
- name: "Install java"
  become_user: "{{ machine_user }}"
  unarchive:
    src: "{{ item }}"
    dest: "{{ app_home }}"
  with_items:
    - "jdk-8u421-linux-x64.tar.gz"

# Java Home Configuration
- name: "Link java_home"
  become_user: "{{ machine_user }}"
  file:
    src: "/app/jdk1.8.0_421"
    dest: "{{ java_home }}"
    owner: "{{ machine_user }}"
    group: "{{ machine_user }}"
    state: link
    force: yes

# Tomcat Download and Installation
- name: "Download tomcat"
  become_user: "{{ machine_user }}"
  get_url:
    url: "https://archive.apache.org/dist/tomcat/tomcat-{{ tomcat_dist }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
    dest: "{{ app_home }}/apache-tomcat-{{ tomcat_version }}.tar.gz"
    mode: 0755
  register: download_result
  failed_when:
    - download_result.status_code is defined
    - download_result.status_code != 200
  retries: 3
  delay: 5

# Tomcat Extraction and Setup
- name: "Unpack tomcat file"
  become_user: "{{ machine_user }}"
  unarchive:
    src: "{{ app_home }}/{{ tomcat_download_file }}.tar.gz"
    dest: "{{ app_home }}"
    remote_src: yes

# Tomcat Symbolic Link Creation
- name: "Link tomcat with tomcat download file"
  become_user: "{{ machine_user }}"
  file:
    src: "{{ app_home }}/{{ tomcat_download_file }}"
    dest: "{{ tomcat_home }}"
    state: link
    mode: 0755

# Environment Configuration
- name: "Copy setenv to tomcat_home/bin"
  template:
    src: "setenv.sh.j2"
    dest: "{{ tomcat_home }}/bin/setenv.sh"
    mode: 0755

# Permission Setup
- name: Ensure permissions for Tomcat directories
  file:
    path: "{{ tomcat_home }}"
    state: directory
    owner: "{{ machine_user }}"
    group: "{{ machine_user }}"
    recurse: yes

# Tomcat Service Start
- name: Start Tomcat with explicit environment
  shell: "setsid {{ tomcat_home }}/bin/startup.sh & disown"
  become_user: "{{ machine_user }}"
  args:
    chdir: "{{ tomcat_home }}"

# Backup Creation
- name: Create backup of initial installation
  archive:
    path: "{{ tomcat_home }}"
    dest: "{{ app_home }}/tomcat_initial_backup_{{ ansible_date_time.iso8601 }}.tar.gz"
    owner: "{{ machine_user }}"
    group: "{{ machine_user }}"
  when: not ansible_check_mode

# Service Health Check
- name: "Check tomcat status"
  wait_for:
    host: "{{ tomcat_address }}"
    port: "{{ tomcat_port }}"
    state: started
    delay: 10
    timeout: 120
